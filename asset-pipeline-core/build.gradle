buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}



apply plugin: 'java-library'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'idea'

group = 'com.bertramlabs.plugins'
sourceCompatibility = '1.11'
targetCompatibility = '1.11'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')


repositories {
	mavenCentral()
}

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

groovydoc {
	docTitle "Asset Pipeline Core"
	windowTitle "Asset Pipeline For the JVM API Doc"
	groovyClasspath = configurations.doc
	classpath = configurations.runtime
	// Links to external Javadoc, currently only the J2SE links are working properly
  	link('http://download.oracle.com/javase/8/docs/api/', 'java.', 'org.xml', 'javax.', 'org.xml.')
  	link('http://groovy.codehaus.org/api/',  'groovy.', 'org.codehaus.groovy.')
}

dependencies {
	compileOnly    'org.codehaus.groovy:groovy:3.0.20'
	compileOnly    'org.codehaus.groovy:groovy-json:3.0.20'
	compileOnly    'org.codehaus.groovy:groovy-templates:3.0.20'
	doc         'org.codehaus.groovy:groovy-all:3.0.6'
	doc         'org.fusesource.jansi:jansi:1.11'
	api     'org.mozilla:rhino:1.7R4'
	api("org.graalvm.sdk:graal-sdk:22.0.0.2")
    api("org.graalvm.js:js:22.0.0.2")
    api("org.graalvm.js:js-scriptengine:22.0.0.2")

	compileOnly     'com.google.javascript:closure-compiler-unshaded:v20240317'
	api 'org.slf4j:slf4j-api:1.7.28'
	//api   'log4j:log4j:1.2.16'
	testImplementation project(':asset-pipeline-classpath-test')
	testImplementation 'org.codehaus.groovy:groovy-all:3.0.20'
	testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
	testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.28'
	compileOnly 'org.slf4j:slf4j-simple:1.7.28'
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'asset-pipeline-core'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'asset-pipeline-core'
					description 'JVM Asset Pipeline library for serving static web assets, bundling, minifying, and extensibility for transpiling.'
					url 'https://github.com/bertramdev/asset-pipeline-core'
					scm {
						url 'https://github.com/bertramdev/asset-pipeline-core'
						connection 'scm:https://bertramdev@github.com/bertramdev/asset-pipeline-core.git'
						developerConnection 'scm:git://github.com/bertramdev/asset-pipeline-core.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
		}
	}

    repositories {
        maven {
            if( !isReleaseVersion ) {
                url = "http://nexus.bertramlabs.com/content/repositories/snapshots"
                if(project.hasProperty('labsNexusUser')) {
                    credentials {
                        username = labsNexusUser
                        password = labsNexusPassword
                    }
                }
            }
        }
    }
}


task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}


test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

