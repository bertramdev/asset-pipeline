buildscript {
	repositories {
		mavenLocal()
		jcenter()
		maven {
			url 'https://plugins.gradle.org/m2/'
		}
	}
	dependencies {
		classpath 'com.gradle.publish:plugin-publish-plugin:0.9.9'
	}
}

plugins {
	id "com.jfrog.bintray" version "1.8.5"
}

apply plugin: 'com.gradle.plugin-publish'
apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'idea'

group = 'com.bertramlabs.plugins'
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

repositories {
	jcenter()
	mavenLocal()
	mavenCentral()
}

dependencies {
	api gradleApi()
	api localGroovy()

	api project(':asset-pipeline-core')
	api 'com.google.javascript:closure-compiler-unshaded:v20210106'
	testImplementation('org.spockframework:spock-core:1.3-groovy-2.4')
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'asset-pipeline-gradle'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'asset-pipeline-gradle'
					description 'JVM Asset Pipeline Gradle Adapter.'
					url 'https://github.com/bertramdev/asset-pipeline-core'
					scm {
						url 'https://github.com/bertramdev/asset-pipeline-core'
						connection 'scm:https://bertramdev@github.com/bertramdev/asset-pipeline-core.git'
						developerConnection 'scm:git://github.com/bertramdev/asset-pipeline-core.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
			afterEvaluate {
			artifact sourcesJar
			artifact javadocJar
}
		}
	}

	repositories {
		maven {
			credentials {
				username project.properties.get('artifactoryPublishUsername')
				password project.properties.get('artifactoryPublishPassword')
			}
			url 'https://repo.grails.org/grails/libs-snapshots-local/'
		}
	}
}

bintray {
	if(project.hasProperty('bintrayUser')) {
		user = bintrayUser
		key = bintrayKey
	}

    publish=true
	publications = ['maven']
	pkg {
		repo = 'asset-pipeline'
		userOrg = 'bertramlabs'
		name = 'asset-pipeline-gradle'
		licenses = ['Apache-2.0']
        version {
            if (project.hasProperty('mavenUser')) {
                mavenCentralSync {
                    sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                    user = mavenUser //OSS user token
                    password = mavenPassword //OSS user password
                    close = '1'
                    //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                }
            }
        }
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

task(console, dependsOn: 'classes', type: JavaExec) {
main = 'groovy.ui.Console'
classpath = sourceSets.main.runtimeClasspath
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
	website = 'https://github.com/bertramdev/asset-pipeline-core/'
	vcsUrl = 'https://github.com/bertramdev/asset-pipeline-core/'
	description = 'JVM Asset Pipeline Gradle Adapter.'
	tags = ['assets', 'resources', 'asset-pipeline']

	plugins {
		assetPipelinePlugin {
			id = 'com.bertramlabs.asset-pipeline'
			displayName = 'Asset-Pipeline Plugin'
		}
	}
	mavenCoordinates {
		groupId = 'com.bertramlabs.plugins'
	}
}


//task('runtimeFiles') {
//	println project.configurations.runtime.files.collect{ it.class.name}
//}


bintrayUpload.dependsOn build, sourcesJar, javadocJar
