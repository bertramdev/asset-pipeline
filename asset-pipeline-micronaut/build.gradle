

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}

plugins {
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
	// id "io.micronaut.library" version "1.0.0.RC13"
}





apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'idea'

group = 'com.bertramlabs.plugins'
sourceCompatibility = '1.17'
targetCompatibility = '1.17'
repositories {
	mavenCentral()
}

ext {
	micronautVersion = '4.0.3'
}

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

// configurations.all {
	
// 	resolutionStrategy.dependencySubstitution {
//         substitute module("org.apache.groovy:groovy") using module('org.apache.groovy:4.0.20')

//     }
// }

dependencies {
	api     project(':asset-pipeline-core')
	compileOnly "io.micronaut:micronaut-inject-groovy:$micronautVersion"
	annotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
	compileOnly "io.micronaut:micronaut-inject:$micronautVersion"
	api("io.micronaut.rxjava3:micronaut-rxjava3:3.0.1")

    api "io.micronaut:micronaut-http-server-netty:$micronautVersion"
    api 'javax.annotation:javax.annotation-api:1.3.2'

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    testImplementation('org.spockframework:spock-core:2.3-groovy-3.0') {
        exclude module:'groovy-all'
    }
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'asset-pipeline-micronaut'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'asset-pipeline-micronaut'
					description 'JVM Asset Pipeline Micronaut Adapter.'
					url 'https://github.com/bertramdev/asset-pipeline'
					scm {
						url 'https://github.com/bertramdev/asset-pipeline'
						connection 'scm:https://bertramdev@github.com/bertramdev/asset-pipeline.git'
						developerConnection 'scm:git://github.com/bertramdev/asset-pipeline.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
		}
	}

    repositories {
        maven {
            if( !isReleaseVersion ) {
                url = "http://nexus.bertramlabs.com/content/repositories/snapshots"
                if(project.hasProperty('labsNexusUser')) {
                    credentials {
                        username = labsNexusUser
                        password = labsNexusPassword
                    }
                }
            }
        }
    }
}

task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.runtimeClasspath
}

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}
