buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
	}
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'idea'

group = 'com.bertramlabs.plugins'
sourceCompatibility = '1.17'
targetCompatibility = '1.17'

ext.isReleaseVersion = !version.endsWith('SNAPSHOT')

configurations {
	provided
	doc.extendsFrom(runtime)
}

sourceSets {
	main {
		compileClasspath += configurations.provided
		groovy.srcDirs   += ['src/main/java']
		java.srcDirs      = []
	}
}

java {
    withSourcesJar()
    withJavadocJar()
}

repositories {
	mavenCentral()
	mavenLocal()
	mavenCentral()
}

dependencies {
	compileOnly    'org.codehaus.groovy:groovy:2.4.19'
	api     project(':asset-pipeline-core')
	api     project(':asset-pipeline-servlet')
	api     'org.springframework.boot:spring-boot-starter-web:3.0.0'
	testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4'
	// compileOnly "org.slf4j:log4j-over-slf4j:1.7.28"


}

publishing {
	publications {
		maven(MavenPublication) {
			artifactId 'asset-pipeline-spring-boot'
			pom.withXml {
				asNode().children().last() + {
					resolveStrategy = Closure.DELEGATE_FIRST
					name 'asset-pipeline-spring-boot'
					description 'JVM Asset Pipeline Gradle Spring Boot Adapter.'
					url 'https://github.com/bertramdev/asset-pipeline-core'
					scm {
						url 'https://github.com/bertramdev/asset-pipeline-core'
						connection 'scm:https://bertramdev@github.com/bertramdev/asset-pipeline-core.git'
						developerConnection 'scm:git://github.com/bertramdev/asset-pipeline-core.git'
					}
					licenses {
						license {
							name 'The Apache Software License, Version 2.0'
							url 'http://www.apache.org/license/LICENSE-2.0.txt'
							distribution 'repo'
						}
					}
					developers {
						developer {
							id 'davydotcom'
							name 'David Estes'
							email 'davydotcom@gmail.com'
						}
					}
				}
			}
			from components.java
		}
	}

    repositories {
        maven {
            if( !isReleaseVersion ) {
                url = "http://nexus.bertramlabs.com/content/repositories/snapshots"
                if(project.hasProperty('labsNexusUser')) {
                    credentials {
                        username = labsNexusUser
                        password = labsNexusPassword
                    }
                }
            }
        }
    }
}


task(console, dependsOn: 'classes', type: JavaExec) {
	main = 'groovy.ui.Console'
	classpath = sourceSets.main.runtimeClasspath
}

test {
	testLogging {
		exceptionFormat = 'full'
		showStandardStreams = true
	}
}
