buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
    }
}

plugins {
    id "com.jfrog.bintray" version "1.2"
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'idea'
group = 'com.bertramlabs.plugins'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
sourceCompatibility = '1.7'
targetCompatibility = '1.7'

repositories {
	mavenLocal()
    jcenter()
    mavenCentral()

}

configurations {
    provided
}
 
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
    test {
        compileClasspath += configurations.provided
    }
}

dependencies {
    provided 'org.codehaus.groovy:groovy-all:2.0.5'
	compile project(':asset-pipeline-core')
    compile 'org.slf4j:slf4j-api:1.7.28'
    compile 'io.bit3:jsass:5.10.3'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testRuntime 'org.slf4j:slf4j-simple:1.7.21'
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'sass-asset-pipeline'
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'sass-asset-pipeline'
                    description 'Provides SASS Compiling using jsass (libsass) support for the Asset-Pipeline library.'
                    url 'https://www.asset-pipeline.com'
                    scm {
                        url 'https://github.com/bertramdev/sass-asset-pipeline'
                        connection 'scm:https://bertramdev@github.com/bertramdev/sass-asset-pipeline.git'
                        developerConnection 'scm:git://github.com/bertramdev/sass-asset-pipeline.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'gferon'
                            name 'Gabriel FÃ©ron'
                            email 'feron.gabriel@gmail.com'
                        }
                    }
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    if(project.hasProperty('bintrayUser')) {
        user = bintrayUser
        key = bintrayKey
    }
    publications = ['maven']
    publish=true
    pkg {
        repo = 'asset-pipeline'
        userOrg = 'bertramlabs'
        name = 'sass-asset-pipeline'
        licenses = ['Apache-2.0']
        version {
            if (project.hasProperty('mavenUser')) {
                mavenCentralSync {
                    sync = true //Optional (true by default). Determines whether to sync the version to Maven Central.
                    user = mavenUser //OSS user token
                    password = mavenPassword //OSS user password
                    close = '1'
                    //Optional property. By default the staging repository is closed and artifacts are released to Maven Central. You can optionally turn this behaviour off (by puting 0 as value) and release the version manually.
                }
            }
        }
    }
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}

test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}


bintrayUpload.dependsOn build, sourcesJar, javadocJar
